buildscript {
    repositories {
        mavenLocal()
        maven { url = 'http://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
        maven {
            url 'https://dogforce-games.com/maven'
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            url='https://dist.creeper.host/Sponge/maven'
        }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
plugins {
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = "${minecraft_version}-${mod_version}"
if (System.getenv('BUILD_NUMBER') != null) {
    version = "${minecraft_version}-${mod_version}-" + System.getenv('BUILD_NUMBER')
}
group = 'epicsquid.traverse' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'traverse'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.


minecraft {
    mappings channel: 'snapshot', version: "${mcp_mappings}"

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=traverse.mixins.json"

            mods {
                mysticalworld {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=traverse.mixins.json"
            mods {
                mysticalworld {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=traverse.mixins.json"
            args '--mod', 'mysticalworld', '--all', '--output', file('src/generated/resources/')

            mods {
                mysticalworld {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven {
        url 'https://maven.mcmoddev.com'
    }
    maven {
        name = "Jared"
        url = "https://maven.blamejared.com"
    }
    maven {
        url "http://maven.tterrag.com"
    }
}

configurations {
    shade
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    def registrate = "com.tterrag.registrate:Registrate:${registrate_version}"
    implementation fg.deobf(registrate)
    shade registrate

    def noobutil = "noobanidus.libs:noobutil:${minecraft_version}-${noobutil_version}"
    implementation fg.deobf(noobutil)
    shade noobutil
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "traverse",
                "Specification-Vendor"    : "mysticmodding",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "mysticmodding",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "traverse.mixins.json",
                "MixinConnector": "epicsquid.traverse.setup.MixinConnector"
        ])
    }
}

shadowJar {
    configurations = [project.configurations.shade]
    relocate 'com.tterrag.registrate', 'epicsquid.traverse.repack.registrate'
    relocate 'noobanidus.libs.noobutil', 'noobanidus.libs.repack_traverse.noobutil'
    classifier ''
}

jar.classifier = 'nodep'

reobf {
    shadowJar {}
}

build.dependsOn reobfShadowJar

apply plugin: 'org.spongepowered.mixin'
mixin { add sourceSets.main, "traverse.refmap.json" }
